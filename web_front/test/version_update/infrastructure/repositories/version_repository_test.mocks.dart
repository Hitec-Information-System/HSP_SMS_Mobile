// Mocks generated by Mockito 5.0.16 from annotations
// in web_front/test/version_update/infrastructure/repositories/version_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:web_front/core/network/network_info.dart' as _i6;
import 'package:web_front/version_update/domain/version.dart' as _i5;
import 'package:web_front/version_update/infrastructure/datasources/version_remote_data_source.dart'
    as _i3;
import 'package:web_front/version_update/infrastructure/dto/version_dto.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeVersionDTO_0 extends _i1.Fake implements _i2.VersionDTO {}

/// A class which mocks [VersionRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockVersionRemoteDataSource extends _i1.Mock
    implements _i3.VersionRemoteDataSource {
  MockVersionRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.VersionDTO> getAppVersion() =>
      (super.noSuchMethod(Invocation.method(#getAppVersion, []),
              returnValue: Future<_i2.VersionDTO>.value(_FakeVersionDTO_0()))
          as _i4.Future<_i2.VersionDTO>);
  @override
  _i4.Future<void> uploadAppVersion(_i5.Version? version) =>
      (super.noSuchMethod(Invocation.method(#uploadAppVersion, [version]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  String toString() => super.toString();
}
