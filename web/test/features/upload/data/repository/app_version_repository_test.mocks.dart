// Mocks generated by Mockito 5.0.16 from annotations
// in web/test/features/upload/data/repository/app_version_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:web/features/upload/data/datasource/remote/i_app_version_remote_datasource.dart'
    as _i3;
import 'package:web/features/upload/data/model/app_version_model.dart' as _i2;
import 'package:web/features/upload/domain/entity/app_version.dart' as _i5;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAppVersionModel_0 extends _i1.Fake implements _i2.AppVersionModel {}

/// A class which mocks [IAppVersionRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAppVersionRemoteDatasource extends _i1.Mock
    implements _i3.IAppVersionRemoteDatasource {
  MockIAppVersionRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AppVersionModel> getAppVersion() =>
      (super.noSuchMethod(Invocation.method(#getAppVersion, []),
              returnValue:
                  Future<_i2.AppVersionModel>.value(_FakeAppVersionModel_0()))
          as _i4.Future<_i2.AppVersionModel>);
  @override
  _i4.Future<bool> saveAppVersion(_i5.AppVersion? newVersion) =>
      (super.noSuchMethod(Invocation.method(#saveAppVersion, [newVersion]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  String toString() => super.toString();
}
